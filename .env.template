# ============================================================================
# CONFIGURACIÓN DEL FRONTEND - GESTOR DE UNIDADES COMPARTIDAS
# ============================================================================
# 
# INSTRUCCIONES:
# 1. Copia este archivo como '.env' en la misma carpeta
# 2. Rellena todas las variables con tus datos reales
# 3. NUNCA subas el archivo .env al repositorio (debe estar en .gitignore)
# 
# ============================================================================

# ----------------------------------------------------------------------------
# CONFIGURACIÓN DEL SERVIDOR
# ----------------------------------------------------------------------------

# Puerto donde se ejecutará el servidor frontend
# Valor por defecto: 3000
PORT=3000

# Entorno de ejecución (development, production, test)
NODE_ENV=development

# ----------------------------------------------------------------------------
# CONFIGURACIÓN DE GOOGLE OAUTH (AUTENTICACIÓN DE USUARIOS)
# ----------------------------------------------------------------------------
# 
# Para obtener estas credenciales:
# 1. Ve a Google Cloud Console (https://console.cloud.google.com/)
# 2. Crea un proyecto o selecciona uno existente
# 3. Habilita la API de Google Drive
# 4. Ve a "Credenciales" > "Crear credenciales" > "ID de cliente OAuth 2.0"
# 5. Configura como "Aplicación web"
# 6. Agrega las URIs de redirección autorizadas

# ID del cliente OAuth de Google
# Ejemplo: 123456789-abcdefghijklmnop.apps.googleusercontent.com
GOOGLE_CLIENT_ID=tu-google-client-id-aqui

# Secreto del cliente OAuth de Google
# Ejemplo: GOCSPX-AbCdEfGhIjKlMnOpQrStUvWxYz
GOOGLE_CLIENT_SECRET=tu-google-client-secret-aqui

# URI de redirección para OAuth (debe coincidir con la configurada en Google Cloud)
# Para desarrollo local: http://localhost:3000/auth/google/callback
# Para producción: https://tu-dominio.com/auth/google/callback
GOOGLE_REDIRECT_URI=http://localhost:3000/auth/google/callback

# ----------------------------------------------------------------------------
# CONFIGURACIÓN DE JWT (TOKENS DE SESIÓN)
# ----------------------------------------------------------------------------

# Clave secreta para firmar los tokens JWT
# IMPORTANTE: Usa una clave fuerte y única en producción
# Puedes generar una con: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
JWT_SECRET=tu-jwt-secret-muy-seguro-aqui

# ----------------------------------------------------------------------------
# CONFIGURACIÓN DE SERVICE ACCOUNT (ACCESO A GOOGLE DRIVE)
# ----------------------------------------------------------------------------
# 
# Para obtener estas credenciales:
# 1. Ve a Google Cloud Console
# 2. Ve a "IAM y administración" > "Cuentas de servicio"
# 3. Crea una nueva cuenta de servicio o selecciona una existente
# 4. Genera una clave JSON y extrae los valores de cada campo
# 5. Para Domain-Wide Delegation, configura los scopes necesarios

# Tipo de cuenta (siempre "service_account")
GOOGLE_SERVICE_ACCOUNT_TYPE=service_account

# ID del proyecto de Google Cloud
# Ejemplo: mi-proyecto-123456
GOOGLE_SERVICE_ACCOUNT_PROJECT_ID=tu-project-id-aqui

# ID de la clave privada
# Ejemplo: abcd1234efgh5678ijkl9012mnop3456qrst7890
GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY_ID=tu-private-key-id-aqui

# Clave privada (incluye -----BEGIN PRIVATE KEY----- y -----END PRIVATE KEY-----)
# IMPORTANTE: Mantén los \n para los saltos de línea
# Ejemplo: "-----BEGIN PRIVATE KEY-----\nMIIE...\n-----END PRIVATE KEY-----\n"
GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nTU-CLAVE-PRIVADA-COMPLETA-AQUI\n-----END PRIVATE KEY-----\n"

# Email de la cuenta de servicio
# Ejemplo: mi-service-account@mi-proyecto-123456.iam.gserviceaccount.com
GOOGLE_SERVICE_ACCOUNT_CLIENT_EMAIL=tu-service-account-email-aqui

# ID del cliente de la cuenta de servicio
# Ejemplo: 123456789012345678901
GOOGLE_SERVICE_ACCOUNT_CLIENT_ID=tu-service-account-client-id-aqui

# URI de autorización de Google (normalmente no cambia)
GOOGLE_SERVICE_ACCOUNT_AUTH_URI=https://accounts.google.com/o/oauth2/auth

# URI de token de Google (normalmente no cambia)
GOOGLE_SERVICE_ACCOUNT_TOKEN_URI=https://oauth2.googleapis.com/token

# URL de certificados X509 del proveedor de autenticación (normalmente no cambia)
GOOGLE_SERVICE_ACCOUNT_AUTH_PROVIDER_X509_CERT_URL=https://www.googleapis.com/oauth2/v1/certs

# URL de certificado X509 del cliente
# Ejemplo: https://www.googleapis.com/robot/v1/metadata/x509/mi-service-account%40mi-proyecto-123456.iam.gserviceaccount.com
GOOGLE_SERVICE_ACCOUNT_CLIENT_X509_CERT_URL=tu-client-cert-url-aqui

# Dominio del universo de Google (normalmente "googleapis.com")
GOOGLE_SERVICE_ACCOUNT_UNIVERSE_DOMAIN=googleapis.com

# ----------------------------------------------------------------------------
# CONFIGURACIÓN ADICIONAL
# ----------------------------------------------------------------------------

# Dominios permitidos para autenticación (separados por coma)
# Ejemplo: "empresa.com,subsidiaria.com" o "*" para todos
# Deja vacío para permitir cualquier dominio
ALLOWED_DOMAINS=

# Email del usuario para impersonación (Domain-Wide Delegation)
# Ejemplo: admin@empresa.com
# Solo necesario si usas Domain-Wide Delegation
IMPERSONATE_USER_EMAIL=

# ----------------------------------------------------------------------------
# NOTAS IMPORTANTES PARA PRODUCCIÓN
# ----------------------------------------------------------------------------
# 
# 1. SEGURIDAD:
#    - Cambia todas las claves por valores únicos y seguros
#    - Usa HTTPS en producción
#    - Configura CORS apropiadamente
# 
# 2. GOOGLE CLOUD:
#    - Habilita las APIs necesarias: Drive API, OAuth2 API
#    - Configura los dominios autorizados
#    - Revisa los permisos de la cuenta de servicio
# 
# 3. FIRESTORE:
#    - Configura las reglas de seguridad apropiadas
#    - Habilita la facturación si es necesario
# 
# 4. MONITOREO:
#    - Configura logs apropiados
#    - Monitorea el uso de APIs
#    - Configura alertas de errores
# 
# ============================================================================